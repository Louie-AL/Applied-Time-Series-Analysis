"0","df <- as.data.frame(bank_calls) # transform to dataframe"
"0",""
"0","#remove UTC tag"
"0","date_as_posix <- strptime(df$DateTime, format=""%Y-%m-%d %H:%M:%S"", tz=""UTC"") "
"0","invisible(strftime(date_as_posix, format=""%Y-%m-%d %H:%M"", tz=""UTC""))"
"0",""
"0","# matrix with 164 rows (days) and 7 cols (intervals)"
"0","aggregate <- matrix(0, nrow = 164, ncol = 7)"
"0",""
"0","# start on day 1"
"0","day_count = 1"
"0",""
"0","#start looping through the matrix starting in day 1 until day 164 "
"0","for (i in seq_along(df$DateTime)) {"
"0","  "
"0","  # if day changes, sum one to the index pointer"
"0","  if (date(df$DateTime[i]) != date(df$DateTime[i-1]) && i > 1) {"
"0","    day_count = day_count + 1"
"0","  }"
"0","  "
"0","  # Check under which interval the timestamp falls into and sum the calls"
"0","  if (hour(df$DateTime[i]) >= 7 && hour(df$DateTime[i]) < 9 ) {"
"0","    aggregate[day_count,1] = aggregate[day_count,1] + df$Calls[i]"
"0","  }"
"0","  if (hour(df$DateTime[i]) >= 9 && hour(df$DateTime[i]) < 11 ) {"
"0","    aggregate[day_count,2] = aggregate[day_count,2] + df$Calls[i]"
"0","  }"
"0","  if (hour(df$DateTime[i]) >= 11 && hour(df$DateTime[i]) < 13 ) {"
"0","    aggregate[day_count,3] = aggregate[day_count,3] + df$Calls[i]"
"0","  }"
"0","  if (hour(df$DateTime[i]) >= 13 && hour(df$DateTime[i]) < 15 ) {"
"0","    aggregate[day_count,4] = aggregate[day_count,4] + df$Calls[i]"
"0","  }"
"0","  if (hour(df$DateTime[i]) >= 15 && hour(df$DateTime[i]) < 17 ) {"
"0","    aggregate[day_count,5] = aggregate[day_count,5] + df$Calls[i]"
"0","  }"
"0","  if (hour(df$DateTime[i]) >= 17 && hour(df$DateTime[i]) < 19 ) {"
"0","    aggregate[day_count,6] = aggregate[day_count,6] + df$Calls[i]"
"0","  }"
"0","  if (hour(df$DateTime[i]) >= 19 && hour(df$DateTime[i]) <= 21 ) {"
"0","    aggregate[day_count,7] = aggregate[day_count,7] + df$Calls[i]"
"0","  }"
"0","}"
"0",""
"0","print(""First 50 days of each interval are plotted below."")"
"1","[1]"
"1"," ""First 50 days of each interval are plotted below."""
"1","
"
"0","par(mfrow=c(3,4))"
"0","plot.ts(aggregate[0:50,1], main = ""7am to 9am"")"
