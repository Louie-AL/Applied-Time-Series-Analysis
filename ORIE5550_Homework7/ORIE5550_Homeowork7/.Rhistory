# Smooth
Phi      <- diag(0,4)
Phi[1,1] <- est$par[1]
Phi[2,]  <- c(0,-1,-1,-1)
Phi[3,]  <- c(0,1,0,0)
Phi[4,]  <- c(0,0,1,0)
Q1      <- est$par[2]
Q2      <- est$par[3]
QQ       <- diag(0,4)
QQ[1,1]  <- Q1
QQ[2,2]  <- Q2
RR       <- est$par[4]
ks       <- Ksmooth(data_air, A, mu0, Sigma0, Phi, QQ, RR)
data_air = AirPassengers
par(mfrow = c(1, 2))
plot.ts(data_air)
plot.ts(log(data_air))
A <- cbind(1,0,1,0,0,0,0,0,0,0,0,0,0)
# Function to Calculate Likelihood
Linn <- function(para){
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- para[1]
Q2 <- para[2]
Q3 <- para[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- para[4] # Vt
kf <- Kfilter(data_air, A, mu0, Sigma0, Phi, QQ, RR,
Ups=NULL, Gam=NULL,input=NULL,S=NULL,version=1)
return(kf$like)
}
# Kfilter
# Initial Parameters
mu0      <- c(data_air[1],data_air[2],0.1,0.1)
Sigma0   <- diag(0.1, 4)
init.par <- c(1, 1, 1, 1)  # G[1,1], the 2 Rs and Q
# Estimation
est <- optim(init.par, Linn, NULL, method="BFGS", hessian=TRUE, control=list(trace=0,REPORT=1))
SE  <- sqrt(diag(solve(est$hessian)))
u   <- cbind(estimate=est$par,SE)
rownames(u)=c("Phi11","sigw1","sigw2","sigv"); u
# Ksmooth
# Smooth
# Smooth
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- est$par[1]
Q2 <- est$par[2]
Q3 <- est$par[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- est$par[4] # Vt
ks       <- Ksmooth(data_air, A, mu0, Sigma0, Phi, QQ, RR)
est
data_air = AirPassengers
par(mfrow = c(1, 2))
plot.ts(data_air)
plot.ts(log(data_air))
A <- cbind(1,0,1,0,0,0,0,0,0,0,0,0,0)
# Function to Calculate Likelihood
Linn <- function(para){
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- para[1]
Q2 <- para[2]
Q3 <- para[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- para[4] # Vt
kf <- Kfilter(data_air, A, mu0, Sigma0, Phi, QQ, RR,
Ups=NULL, Gam=NULL,input=NULL,S=NULL,version=1)
return(kf$like)
}
# Kfilter
# Initial Parameters
mu0      <- c(0.1,0.1,0.1,0.1)
Sigma0   <- diag(0.1, 4)
init.par <- c(1, 1, 1, 1)  # G[1,1], the 2 Rs and Q
# Estimation
est <- optim(init.par, Linn, NULL, method="BFGS", hessian=TRUE, control=list(trace=0,REPORT=1))
SE  <- sqrt(diag(solve(est$hessian)))
u   <- cbind(estimate=est$par,SE)
rownames(u)=c("Phi11","sigw1","sigw2","sigv"); u
# Ksmooth
# Smooth
# Smooth
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- est$par[1]
Q2 <- est$par[2]
Q3 <- est$par[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- est$par[4] # Vt
ks       <- Ksmooth(data_air, A, mu0, Sigma0, Phi, QQ, RR)
st
est
data_air = AirPassengers
par(mfrow = c(1, 2))
plot.ts(data_air)
plot.ts(log(data_air))
A <- cbind(1,0,1,0,0,0,0,0,0,0,0,0,0)
# Function to Calculate Likelihood
Linn <- function(para){
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- para[1]
Q2 <- para[2]
Q3 <- para[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- para[4] # Vt
kf <- Kfilter(data_air, A, mu0, Sigma0, Phi, QQ, RR,
Ups=NULL, Gam=NULL,input=NULL,S=NULL,version=1)
return(kf$like)
}
# Kfilter
# Initial Parameters
mu0      <- c(data_air[1],data_air[1],data_air[1], data_air[1])
Sigma0   <- diag(0.1, 4)
init.par <- c(1, 1, 1, 1)  # G[1,1], the 2 Rs and Q
# Estimation
est <- optim(init.par, Linn, NULL, method="BFGS", hessian=TRUE, control=list(trace=0,REPORT=1))
SE  <- sqrt(diag(solve(est$hessian)))
u   <- cbind(estimate=est$par,SE)
rownames(u)=c("Phi11","sigw1","sigw2","sigv"); u
# Ksmooth
# Smooth
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- est$par[1]
Q2 <- est$par[2]
Q3 <- est$par[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- est$par[4] # Vt
ks       <- Ksmooth(data_air, A, mu0, Sigma0, Phi, QQ, RR)
data_air = AirPassengers
data_air
data_air = AirPassengers
par(mfrow = c(1, 2))
plot.ts(data_air)
plot.ts(log(data_air))
A <- cbind(1,0,1,0,0,0,0,0,0,0,0,0,0)
# Function to Calculate Likelihood
Linn <- function(para){
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- para[1]
Q2 <- para[2]
Q3 <- para[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- para[4] # Vt
kf <- Kfilter(data_air, A, mu0, Sigma0, Phi, QQ, RR,
Ups=NULL, Gam=NULL,input=NULL,S=NULL,version=1)
return(kf$like)
}
# Kfilter
# Initial Parameters
mu0      <- c(data_air[1],data_air[1],data_air[1], data_air[1])
Sigma0   <- diag(0.1, 4)
init.par <- c(1, 1, 1, 1)  # G[1,1], the 2 Rs and Q
# Estimation
est <- optim(init.par, Linn, NULL, method="BFGS", hessian=TRUE, control=list(trace=0,REPORT=1))
SE  <- sqrt(diag(solve(est$hessian)))
u   <- cbind(estimate=est$par,SE)
rownames(u)=c("Phi11","sigw1","sigw2","sigv"); u
# Ksmooth
# Smooth
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- est$par[1]
Q2 <- est$par[2]
Q3 <- est$par[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- est$par[4] # Vt
ks       <- Ksmooth(data_air, A, mu0, Sigma0, Phi, QQ, RR)
data_air = AirPassengers
data_air
data_air = AirPassengers
par(mfrow = c(1, 2))
plot.ts(data_air)
plot.ts(log(data_air))
A <- cbind(1,0,1,0,0,0,0,0,0,0,0,0,0)
# Function to Calculate Likelihood
Linn <- function(para){
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- para[1]
Q2 <- para[2]
Q3 <- para[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- para[4] # Vt
kf <- Kfilter(data_air, A, mu0, Sigma0, Phi, QQ, RR,
Ups=NULL, Gam=NULL,input=NULL,S=NULL,version=1)
return(kf$like)
}
# Kfilter
# Initial Parameters
mu0      <- c(data_air[1],data_air[1],data_air[1], data_air[1])
Sigma0   <- diag(0.1, 4)
init.par <- c(1, 1, 1, 1)  # G[1,1], the 2 Rs and Q
# Estimation
est <- optim(init.par, Linn, NULL, method="BFGS", hessian=TRUE, control=list(trace=0,REPORT=1))
SE  <- sqrt(diag(solve(est$hessian)))
u   <- cbind(estimate=est$par,SE)
rownames(u)=c("Phi11","sigw1","sigw2","sigv"); u
# Ksmooth
# Smooth
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- est$par[1]
Q2 <- est$par[2]
Q3 <- est$par[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- est$par[4] # Vt
ks <- Ksmooth(data_air, A, mu0, Sigma0, Phi, QQ, RR)
data_air = AirPassengers
par(mfrow = c(1, 2))
plot.ts(data_air)
plot.ts(log(data_air))
A <- cbind(1,0,1,0,0,0,0,0,0,0,0,0,0)
# Function to Calculate Likelihood
Linn <- function(para){
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- para[1]
Q2 <- para[2]
Q3 <- para[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- para[4] # Vt
kf <- Kfilter(data_air, A, mu0, Sigma0, Phi, QQ, RR,
Ups=NULL, Gam=NULL,input=NULL,S=NULL,version=1)
return(kf$like)
}
# Kfilter
# Initial Parameters
mu0      <- c(data_air[1],data_air[1],data_air[1], data_air[1])
Sigma0   <- diag(0.1, 4)
init.par <- c(1, 1, 1, 1)  # G[1,1], the 2 Rs and Q
# Estimation
est <- optim(init.par, Linn, NULL, method="BFGS", hessian=TRUE, control=list(trace=0,REPORT=1))
SE  <- sqrt(diag(solve(est$hessian)))
u   <- cbind(estimate=est$par,SE)
rownames(u)=c("Phi11","sigw1","sigw2","sigv"); u
# Ksmooth
# Smooth
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- est$par[1]
Q2 <- est$par[2]
Q3 <- est$par[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- est$par[4] # Vt
ks <- Ksmooth(data_air, A, mu0, Sigma0, Phi, QQ, RR)
data_air = AirPassengers
par(mfrow = c(1, 2))
plot.ts(data_air)
plot.ts(log(data_air))
A <- cbind(1,0,1,0,0,0,0,0,0,0,0,0,0)
# Function to Calculate Likelihood
Linn <- function(para){
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- para[1]
Q2 <- para[2]
Q3 <- para[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- para[4] # Vt
kf <- Kfilter(data_air, A, mu0, Sigma0, Phi, QQ, RR,
Ups=NULL, Gam=NULL,input=NULL,S=NULL,version=1)
return(kf$like)
}
# Kfilter
# Initial Parameters
mu0      <- c(data_air[1],data_air[1],data_air[1], data_air[1])
Sigma0   <- diag(0.1, 4)
init.par <- c(1, 1, 1, 1)  # G[1,1], the 2 Rs and Q
# Estimation
est <- optim(init.par, Linn, NULL, method="BFGS", hessian=TRUE, control=list(trace=0,REPORT=1))
SE  <- sqrt(diag(solve(est$hessian)))
u   <- cbind(estimate=est$par,SE)
rownames(u)=c("Phi11","sigw1","sigw2","sigv"); u
# Ksmooth
# Smooth
Phi <- diag(0,13)
Phi[1,1] <- 1
Phi[1,2] <- 1
Phi[2,2] <- 1
Phi[3,] <- c(0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
Phi[4,3] <- 1;
Phi[5,4] <- 1;
Phi[6,5] <- 1;
Phi[7,6] <- 1;
Phi[8,7] <- 1;
Phi[9,8] <- 1;
Phi[10,8] <- 1;
Phi[11,10] <- 1;
Phi[12,11] <- 1;
Phi[13,12] <- 1;
Q1 <- est$par[1]
Q2 <- est$par[2]
Q3 <- est$par[3]   # sqrt q11 and q22
QQ <- diag(0,13)
QQ[1,1] <- Q1 #Wt
QQ[2,2] <- Q2 #Zt
QQ[3,3] <- Q3 #Ut
RR <- est$par[4] # Vt
ks <- Ksmooth(data_air, A, mu0, Sigma0, Phi, QQ, RR)
